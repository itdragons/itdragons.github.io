user  nginx;
#nginx 进程数，建议按照cpu 数目来指定，一般为它的倍数。
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    #单个后台worker process进程的最大并发链接数  
    worker_connections  2018;
}

http {
	#设定mime类型,类型由mime.type文件定义
	include       /etc/nginx/mime.types;
	default_type  application/octet-stream;
	
	#设定日志格式
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	                 '$status $body_bytes_sent "$http_referer" '
	                 '"$http_user_agent" "$http_x_forwarded_for"';
	
	access_log  /var/log/nginx/access.log  main;
	
	#开启gzip压缩
	gzip  on;
	gzip_disable "MSIE [1-6].";
	
	#设定请求缓冲
	client_header_buffer_size    128k;
	large_client_header_buffers  4 128k;
	
	#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，
	#对于普通应用，必须设为 on,
	#如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，
	#以平衡磁盘与网络I/O处理速度，降低系统的uptime.
	sendfile on;
	
	#用于设置客户端连接保持活动的超时时间，在超过这个时间之后服务器会关闭该链接。
	#keepalive_timeout  0;
	keepalive_timeout  120; 
	
	#允许客户端请求的最大单文件字节数
	client_max_body_size 50m;
	
	#服务器名字的hash表大小
	server_names_hash_bucket_size 128;
	#header中自定义变量时支持下划线
	underscores_in_headers on; 
	
	server {
		listen 8002;
		server_name  localhost;
		location / {
			try_files $uri $uri/ /index.html;
			root /html/trans;
			index index.html index.htm;
		}
		location /apis {
			rewrite ^/apis/?(.*)$ /$1 break;
			include uwsgi_params;
			proxy_pass http://hd-gateway:9099;
		}
		proxy_set_header   Host             $host;
		proxy_set_header   X-Real-IP        $remote_addr;						
		proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
		add_header Access-Control-Allow-Origin *;
	}
	
	# sftp
 	server {
  		listen 8022;
     	server_name localhost;
  		location /upload {
			alias /upload;
  			 index index.html;
  		}
    }

}

