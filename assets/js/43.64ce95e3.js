(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{378:function(s,a,e){"use strict";e.r(a);var t=e(3),r=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),a("h2",{attrs:{id:"容器常用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器常用"}},[s._v("#")]),s._v(" 容器常用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("删除名称或标签为none的镜像\ndocker rmi -f  `docker images | grep '<none>' | awk '{print $3}'` \n\n磁盘清理，删除关闭的容器、无用的数据卷和网络，以及dangling镜像(即无tag的镜像)。\ndocker system prune\n \n磁盘清理得更加彻底，可以将没有容器使用Docker镜像都删掉。注意，这两个命令会把你暂时关闭的容器，以及暂时没有用到的Docker镜像都删掉了…所以使用之前一定要想清楚.。我没用过，因为会清理 没有开启的  Docker 镜像。\ndocker system prune -a\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#network"}},[s._v("#")]),s._v(" network")]),s._v(" "),a("p",[s._v("docker-compose中未显式声明，会生成默认的网络，启动的容器会被加入test_default中，其中"),a("strong",[s._v("test")]),s._v("为docker-compose的父文件夹名")]),s._v(" "),a("h3",{attrs:{id:"查看网络组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看网络组"}},[s._v("#")]),s._v(" 查看网络组")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker network ls\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"创建网络组-桥接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建网络组-桥接"}},[s._v("#")]),s._v(" 创建网络组-桥接")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker network create {网络组名称} --driver bridge\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"删除网络组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除网络组"}},[s._v("#")]),s._v(" 删除网络组")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker network rm {网络组名称}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"应用指定使用的网络组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用指定使用的网络组"}},[s._v("#")]),s._v(" 应用指定使用的网络组")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("version: '3'\nservices:\n  web-1:\n    image: web\n    networks:\n        - {网络组名称}\n    \nnetworks:\n    {网络组名称}:\n        external: true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);